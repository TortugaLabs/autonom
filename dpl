#!/bin/bash
loc=$(dirname "$(readlink -f "$0")")

if [ ! -f "$loc.env" ] ; then
  echo "Missing $loc.env file"
  exit 1
fi
. "$loc.env"

if [ -z "$target" ] ; then
  echo "No target defined"
  exit
fi

# Check submodules...
if [ -d "$loc/.git" ] ; then
  if [ -f "$loc/.gitmodules" ] ; then
    # Check if submodules are all there...
    grep -E '^\s*path\s*=\s*' "$loc"/.gitmodules | sed 's/^\s*path\s*=\s*//' | while read subpath
    do
      if [ ! -e "$loc/$subpath/.git" ] ; then
	(cd "$loc" && git submodule update --init --recursive)
	break
      fi
    done
  fi
fi

binary_data() {
  local src="$1" dst="$2" marker="/_EOF_9384_EOF_/"
  echo "$2() {"
  echo "("
  echo "cat <<'$marker'"
  gzip -v < "$src" | base64
  echo "$marker"
  echo ") | base64 -d | gzip -d"
  echo "}"
}

bcopy() {
  local mode=
  while [ $# -gt 0 ]
  do
    case "$1" in
    --mode=*)
      mode=${1#--mode=}
      ;;
    *)
      break
      ;;
    esac
    shift
  done
  target="$1"
  if [ -f "$target" ] ; then
    dd of="$target.$$"
    newsum=$(md5sum < "$target.$$")
    oldsum=$(md5sum < "$target")
    if [ x"$newsum" = x"$oldsum" ] ; then
      rm -f "$target.$$"
    else
      echo "Updating $target"
      rm -f "$target"
      mv "$target.$$" "$target"
    fi
  else
    dd of="$target"
    echo "Creating $target"
  fi
  [ -n "$mode" ] && chmod "$mode" "$target"
}


xid=0
send_file() {
  local f="$xid" src="$1" ; shift
  xid=$(expr $xid + 1)
  binary_data "$src" data_${f}
  echo "data_${f} | bcopy $*"
}

payload() {
  ( cd /etc/init.d && ln -sf ../autonom.openrc autonom )
  local appdir="$1" python=python3

  # Check for dependancies...
  f=""
  for m in py3-requests py3-cryptography
  do
    if ! grep -q $m /etc/apk/world ; then
      f="$f $m"
    fi
  done
  if [ -n "$f" ] ; then
    echo "Missing dependancies:$f"
    exit 1
  fi

  # Configure virtual environemnt
  [ -d "$appdir/venv" ] && return

  if [ -d "$appdir/venv" ] ; then
    rm -rf "$appdir/venv"
  fi
  mkdir -p "$appdir/venv"
  $python -m venv --system-site-packages "$appdir/venv"
  . "$appdir/venv/bin/activate"
  pip install authlib==0.11 google-api-python-client google-auth


}

(  
  declare -f payload
  declare -f bcopy
  appdir="/var/www/autonom"
  echo "mkdir -p $appdir"

  echo -n echo \'
  cat <<-_EOF_
	#!/bin/sh
	dir=\$(dirname "\$0")
	. \$dir/venv/bin/activate
	export \
	   HTPASSWD="$HTPASSWD" \
	   HTGROUPS="$HTGROUPS" \
	   IDENT_SSO_MAP="$IDENT_SSO_MAP" \
	   IDENT_SSO_ACL="$IDENT_SSO_ACL" \
	   CLIENT_ID="$CLIENT_ID" \
	   CLIENT_SECRET="$CLIENT_SECRET" \
	   GAUTH_MAP="$GAUTH_MAP"
	
	exec python3 -u "\$dir/run.py" "\$@"
	_EOF_
  echo "' > $appdir/run.sh"
  echo "chmod 755 $appdir/run.sh"

  for f in \
	bottle.py apr1.py \
	autonom.py gauth.py login_form.py ident_sso.py \
	run.py
  do
    send_file $f $appdir/$f
  done

  send_file openrc.service --mode=755 /etc/autonom.openrc
  

  echo "payload $appdir"

)  | ssh "$target"



